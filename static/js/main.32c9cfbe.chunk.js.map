{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gOAaeA,EAXF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACzB,OACC,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACA,6BAAKF,IACL,4BAAIC,WCaUK,EAnBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEjB,OACC,8BAEKA,EAAOC,KAAI,SAACC,EAAKC,GAClB,OACC,cAAC,EAAD,CAEOR,GAAIK,EAAOG,GAAGR,GACbF,KAAMO,EAAOG,GAAGV,KACfC,MAAOM,EAAOG,GAAGT,OAHfS,SCIJC,EAZG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC9B,OACC,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAEI,EAPF,SAACC,GACb,OACC,qBAAKC,MAAO,CAACC,SAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACCJ,EAAMK,YCqCMC,G,wDAnCd,aAAc,IAAD,8BACZ,gBAaDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAb1C,EAAKC,MAAM,CACTvB,OAAO,GACDK,YAAY,IAJR,E,qDAOZ,WAAoB,IAAD,OAClBmB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAOtC,WAAS,IAAD,OACDC,EAAeC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC7C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAElE,OAA8B,IAA3BF,KAAKP,MAAMvB,OAAOkC,OACb,0CAER,sBAAKtC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ6B,a,GA7BFM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IACEC,SAASC,eAAe,SAI1CX,M","file":"static/js/main.32c9cfbe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) =>{\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t<div>\r\n\t\t<h2>{name}</h2>\r\n\t\t<p>{email}</p>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default Card;\r\n//{}inside it value of it","import React from 'react';\r\n import Card from './Card';\r\n const CardList =({robots})=>{\r\n \t \r\n \treturn(\r\n \t\t<div>\r\n \t\t{ \r\n\t       robots.map((user,i)=>{\r\n \t\t    return(  \r\n \t\t    \t<Card\r\n \t\t           key={i} \r\n \t\t            id={robots[i].id} \r\n \t\t             name={robots[i].name} \r\n \t\t              email={robots[i].email}\r\n \t\t            />\r\n \t\t );\r\n \t}) \r\n \t}  \r\n\t     </div>\r\n \t\t);\r\n }\r\n export default CardList; ","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) =>{\r\n  return(\r\n   <div className='pa2'>\r\n  \t<input \r\n  \tclassName='pa3 ba b--green bg-lightest-blue'// this is due to attach tachyons file\r\n  \ttype='search' \r\n  \tplaceholder='search robots'\r\n  \tonChange={searchChange}\r\n  \t/>\r\n  \t</div>\r\n  \t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n\treturn (\r\n\t\t<div style={{overflow: 'scroll',border:'5px solid black',height:'800px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t)\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n \r\nclass App extends Component{ \r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\t robots:[],\r\n\t         searchfield:''\r\n\t\t}\r\n\t}\r\n\t componentDidMount(){ //react component life cycle\r\n\t \tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t \t .then(response=> response.json())\r\n\t \t.then(users=> this.setState({robots:users}));\r\n\t \t }\r\n    \r\n\t \r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\trender(){ \r\n\t\tconst filteredRobots=this.state.robots.filter(robots=>{\r\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif(this.state.robots.length===0){\r\n\t\t\treturn <h1> Loading</h1>\r\n\t\t}else{return( \r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>Robofriend</h1>\r\n\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t<CardList robots={filteredRobots}/>\r\n\t\t</Scroll>\r\n\t\t</div>\r\n\t\t); \r\n\t} \t\r\n}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n                                   //always start with uppercase\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n//it is not default js file so put in {}\r\nReactDOM.render(<App/>\r\n                , document.getElementById('root'));        \r\n/// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// 8,9,10 line multiple Card id is for multiple section in webpage\r\n // robot[]is act like array\r\n   "],"sourceRoot":""}